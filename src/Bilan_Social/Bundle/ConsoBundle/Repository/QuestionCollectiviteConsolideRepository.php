<?php

namespace Bilan_Social\Bundle\ConsoBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;

/**
 * SocialRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class QuestionCollectiviteConsolideRepository extends EntityRepository {

    /**
     * @param int $idColl
     *
     * @return array
     */
    public function findOneByActif($idColl, $idEnqu) {

        $qb = $this->_em->createQueryBuilder();
        $qb->select('q')
                ->from($this->_entityName, 'q')
                ->join('q.enquete', 'e')
                ->addSelect('e')
                ->join('q.collectivite', 'c')
                ->addSelect('c')
                ->where('c.idColl = :collect')
                ->setParameter('collect', $idColl)
                ->andWhere('e.idEnqu = :idEnqu')
                ->setParameter('idEnqu', $idEnqu)
        ;

        try {
            $questionCollectiviteConsolide = $qb->getQuery()->getSingleResult();
        } catch (NoResultException $e) {
            // Pas de questionnaire pour cette enquete et coll
            return null;
        }

        return $questionCollectiviteConsolide;
    }

    public function findQuestionnaire($idColl,$idEnqu) {

        $qb = $this->_em->createQueryBuilder();
        $qb->select('q')
                ->from($this->_entityName, 'q')
                ->where('q.collectivite = :collect')
                ->andWhere('q.enquete = :idEnqu')
                ->setParameter('collect', $idColl)
                ->setParameter('idEnqu', $idEnqu)
        ;
        try {
            $questionCollectiviteConsolide = $qb->getQuery()->getOneOrNullResult();
            
        } catch (NoResultException $e) {
            // Pas de questionnaire pour cette enquete et coll
            return $e->getMessage();
        }
//
        return $questionCollectiviteConsolide;
    }

}
