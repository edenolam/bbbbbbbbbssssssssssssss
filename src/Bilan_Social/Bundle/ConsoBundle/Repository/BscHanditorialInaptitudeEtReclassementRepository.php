<?php

namespace Bilan_Social\Bundle\ConsoBundle\Repository;
use Bilan_Social\Bundle\CoreBundle\Repository\AbstractRepository;

/**
 * BscHanditorialQuestionsGeneralesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BscHanditorialInaptitudeEtReclassementRepository extends AbstractRepository {

    public function getResultsForExport($idsBsc) {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('SUM(bsch.qA511) AS qA511, SUM(bsch.qA512) AS qA512, SUM(bsch.qA513) AS qA513, SUM(bsch.rA9) AS rA9, SUM(bsch.qA521) AS qA521, 
                     SUM(bsch.rA101) AS rA101, SUM(bsch.qA522) AS qA522, SUM(bsch.qA523) AS qA523, SUM(bsch.qA62) AS qA62, SUM(bsch.qA72) AS qA72,
                     SUM(bsch.qA82) AS qA82')
                ->from($this->_entityName, 'bsch')
                ->where('bsch.bilanSocialConsolide IN (:idsBsc)')
                ->setParameter('idsBsc', $idsBsc);
        try {
            $result = $qb->getQuery()->getSingleResult();
            $result = $this->utf8_encode($result);
        }
        catch (NoResultException $e) {
            // Pas de enquete active consolidé pour la collectivite
            $result = null;
        }

        return $result;
    }

    public function getQA8($idsBsc) {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('bsch.qA8')
                ->from($this->_entityName, 'bsch')
                ->where('bsch.bilanSocialConsolide = :idsBsc')
                ->setParameter('idsBsc', $idsBsc);
        try {
            $result = $qb->getQuery()->getOneOrNullResult();
        }
        catch (NoResultException $e) {
            // Pas de enquete active consolidé pour la collectivite
            $result = null;
        }

        return $result;
    }

}
