    {% set campagne = campagne_service.GetCurrentCampagne() %}
    {% set AnneeCamp = '' %}
    {% if campagne is not null %}
        {% set AnneeCamp = campagne.nmAnne %}
    {% endif %}

    {% set bilan_social_consolide = formRemuneration331.vars.data %}
    {% if formRemuneration331 is defined %}

        {% if indicateur_precedent is defined and indicateur_precedent is not null %}
            {{ include('ConsoBundle:BilanSocialConsolide:modals_ind_precedents/btn_modal.html.twig', { 'indicateur_precedent': indicateur_precedent, 'name' : 331 }) }}
            {{ include('ConsoBundle:BilanSocialConsolide:modals_ind_precedents/modal_331.html.twig', { 'indicateur_precedent': indicateur_precedent }) }}
        {% endif %}

        {{ form_start(formRemuneration331) }}

        <h5>
            Champ : le tableau qui suit concerne les agents contractuels sur un emploi non permanent<br/>
        </h5>

        <table width="100%" id="ind331Table" class="table table-striped table-hover table-bordered">
            <thead>
                <tr>
                    <th rowspan="2" style="text-align: center"></th>
                    <th colspan="2" style="text-align: center">Montant total des rémunérations annuelles brutes</th>
                    <th rowspan="2" style="text-align: center" class="filiTable">Total</th>
                </tr>

                <tr>
                    <th style="text-align: center">Hommes</th>
                    <th style="text-align: center">Femmes</th>
                </tr>
            </thead>
            <tbody class='ind_table_totaux'>

                {% for tag in formRemuneration331.ind331s %}
                    {% set row_data = tag.vars.value %}
                    {% set total_row = row_data.r3311 + row_data.r3312 %}
                    <tr id="331idTr_{{tag.refEmploiNonPermanent.vars.value}}">

                        <td style="min-width: 300px">
                            {{ form_widget(tag.refEmploiNonPermanent) }}
                            {{ tag.refEmploiNonPermanent.vars.data.lbEmplnonperm}}
                        </td>

                        <td id="r3311" data-col-group='row_total'>{{ form_widget(tag.r3311) }}</td>
                        <td id="r3312" data-col-group='row_total'>{{ form_widget(tag.r3312) }}</td>
                        <td class="filiTable" data-col-id='row_total'>{{ total_row }}</td>

                    </tr>
                {% endfor %}

                {% if formRemuneration331.ind331s.count() > 0  %}
                    {% set total = bilan_social_consolide.getIndPileForBy('ind331s') %}
                    {% set total_rab = total.r3311 + total.r3312 %}
                    <tr class="filiTable row_totaux" id="totalGlo">
                        <td><b>Total</b></td>
                        <td style="text-align: center" data-col-group='total_rab'>{{ total.r3311 }}</td>
                        <td style="text-align: center" data-col-group='total_rab'>{{ total.r3312 }}</td>
                        <td style="text-align: center" class="filiTable" data-col-id='total_rab'>{{ total_rab }}</td>
                    </tr>
                {% endif %}

            </tbody>
        </table>

        <br/>

        <input class="btn button-tableau pull-right" type="submit" value="Enregistrer et valider les contrôles de cohérence" name="valider" onclick="recordAuto = false;
                $('#progImg').show();" data-valide="1" />

        <img id="progImg" src="{{ asset("img/progress.gif") }}" style="display:none"/>

        {{ form_end(formRemuneration331) }}


        <script type="text/javascript">

                $(document).ready(function ()
                {
                    changeDetect = false;
                    $(document).change();
                    // update331();
                });


                function changedR331(obj) {
                    // update331();
                }


                function update331() {
                    var table331 = document.getElementById('ind331Table');
                    var rowLength331 = table331.rows.length;
                    var idxRowInput = 0;

                    var mtTot1 = 0;
                    var mtTot2 = 0;


                    var mtTot1Glo = 0;
                    var mtTot2Glo = 0;


                    for (var i = 2; i < rowLength331; i += 1) {
                        var row = table331.rows[i];
                        var cellLength = row.cells.length;

                        var lineTotalGlo = false;

                        if (row.id.substring(0, 8) == "totalGlo") {
                            lineTotalGlo = true;

                            for (var y = 0; y < cellLength; y += 1) {
                                var cell = row.cells[y];
                                if (y == 1) {
                                    cell.innerHTML = mtTot1Glo;
                                    mtTot1Glo = 0;
                                } else if (y == 2) {
                                    cell.innerHTML = mtTot2Glo;
                                    mtTot2Glo = 0;
                                }
                            }
                        }

                        for (var y = 0; y < cellLength; y += 1) {
                            var cell = row.cells[y];

                            if (cell.id.substring(0, 5) == "r3312") {
                                if ($('#bscForm331_ind331s_' + idxRowInput + '_r3312').val() != "") {
                                    mtTot2 += parseFloat($('#bscForm331_ind331s_' + idxRowInput + '_r3312').val());
                                    mtTot2Glo += parseFloat($('#bscForm331_ind331s_' + idxRowInput + '_r3312').val());
                                }
                            } else if (cell.id.substring(0, 5) == "r3311") {
                                if ($('#bscForm331_ind331s_' + idxRowInput + '_r3311').val() != "") {
                                    mtTot1 += parseFloat($('#bscForm331_ind331s_' + idxRowInput + '_r3311').val());
                                    mtTot1Glo += parseFloat($('#bscForm331_ind331s_' + idxRowInput + '_r3311').val());
                                }
                            }
                        }

                        if (!lineTotalGlo) {
                            idxRowInput++;
                        }
                    }// end for line

                }


                /*
                 * METHODE AJAX SUBMIT
                 */
                $(function () {
                    // Enregistrement en ajax
                    $('form').on('submit', function (e) {
                        var $this = $(this).closest('div');
                        var btn = $(this).find("input[type=submit]:focus");
                        var value_valide = $(btn).data('valide');
                        $('#bscForm331_valide').val(value_valide);
                        // Submit en ajax pour le fonctionnement d'appel par onglet
                        e.preventDefault();

                        $.ajax({
                            type: 'post',
                            url: '{{ path('bilan_conso_remuneration_ind331_edit') }}',
                            data: $('form').serialize(),
                            success: function (responsejson) {

                                if (responsejson.data == 1) {
                                    if (recordAuto) {
                                        $('#progImg').hide();
                                        $('#messageJS').html("Enregistrement automatique réussi");
                                        messageJS.dialog("open");
                                        setIncoherenceTable(responsejson);
                                    } else {
                                        $('#ind331').load('{{ path('bilan_conso_remuneration_ind331_edit') }}', function () {
                                            $('#progImg').hide();
                                            $('#messageJS').html("Enregistrement réussi");
                                            messageJS.dialog("open");
                                            setIncoherenceTable(responsejson);

                                            var next = $($this).next('.panel-heading');
                                            if(next.length == 0) {
                                                window.location.href = '{{ path('bilan_conso_conditions_edit') }}';
                                            }
                                        });

                                    }
                                } else if (responsejson.data == "-3") {
                                    $('#progImg').hide();
                                    $('#messageJS').html("{{'erreur.unique.violation'|trans}}");
                                    messageJS.dialog("open");
                                } else {
                                    $('#progImg').hide();
                                    $('#messageJS').html("Une erreur s'est produite dans l'enregistrement 1");
                                    messageJS.dialog("open");
                                }


                            },
                            error: function (xhr, status, error) {
                                //alert(xhr);
                                $('#progImg').hide();
                                $('#messageJS').html("Une erreur s'est produite dans l'enregistrement 2 ");
                                messageJS.dialog("open");
                            }

                        });

                    });

                });

        </script>
    {% endif %}
