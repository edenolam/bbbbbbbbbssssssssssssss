<?php

namespace Bilan_Social\Bundle\ReferencielBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;
use Bilan_Social\Bundle\CoreBundle\Repository\AbstractRepository;
/**
 * RefCategorieRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RefCadreEmploiRepository extends RefAbstractRepository {

    public function findByAllWithOrder() {

        $qb = $this->_em->createQueryBuilder();
        $qb->select('ce')
                ->from($this->_entityName, 'ce')
                ->innerJoin('ce.refFiliere', 'f', 'f.idFili = ce.idFili')
                ->where('ce.blCons = 1')
                ->andWhere('ce.blVali = 0')
                ->andWhere('f.blCons = 1')
                //->andWhere('f.idFili= 1')
                ->addOrderBy('f.idFili', 'ASC')
                ->addOrderBy('ce.idCadrempl', 'ASC')
        ;

        try {
            $ce = $qb->getQuery()->getResult();
        } catch (NoResultException $e) {
            // Pas de bilan pour cette enquete et coll
            return null;
        }

        return $ce;
    }

    public function findAllCadreEmploiByBlCons($blCons) {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('ce')
                ->from($this->_entityName, 'ce')
                ->innerJoin('ce.refFiliere', 'f', 'f.idFili = ce.idFili')
                ->where('ce.blCons = :blCons')
                ->andWhere('ce.blVali = 0')
                ->setParameter('blCons', $blCons)
                ->addOrderBy('f.idFili', 'ASC')
                ->addOrderBy('ce.idCadrempl', 'ASC');

        try {
            $cadreemplois = $qb->getQuery()->getResult();
        } catch (NoResultException $e) {
            // Pas de bilan pour cette enquete et coll
            return null;
        }
        return $cadreemplois;
    }

//    public function findByIdCategorie($categorie) {
//        $qb = $this->_em->createQueryBuilder();
//        $qb->select('ce')
//                ->from($this->_entityName, 'ce')
//                ->join('ce.refCategorie', 'c');
//        if (!empty($categorie)) {
//
//            $qb->where('c.idCate = :idcat')
//                    ->setParameter('idcat', $categorie);
//        }
//
//        try {
//            $ce = $qb->getQuery()->getResult();
//        } catch (NoResultException $e) {
//            // Pas de bilan pour cette enquete et coll
//            return null;
//        }
//        return $ce;
//    }

    public function findAllCategorieOrFiliere(array $tableau) {

        $filiere = $tableau['filiere'];
        $categorie = $tableau['categorie'];

        $qb = $this->_em->createQueryBuilder();
        $qb->select('ce')
                ->from($this->_entityName, 'ce')
                ->join('ce.refCategorie', 'c')
                ->join('ce.refFiliere', 'f')
                ->where('ce.blVali = 0');
        if (!empty($categorie)) {

            $qb->andWhere('c.idCate = :idcat')
                    ->setParameter('idcat', $categorie);
        }
        if (!empty($filiere)) {
            $qb->andWhere('f.idFili = :idfili')
                    ->setParameter('idfili', $filiere);
        }

        try {
            $ce = $qb->getQuery()->getResult();
        } catch (NoResultException $e) {
            // Pas de bilan pour cette enquete et coll
            return null;
        }
        return $ce;
    }
    
      public function findCadreEmploiByFiliere($filiere) {

        $qb = $this->_em->createQueryBuilder();
        $qb->select('ce')
                ->from($this->_entityName, 'ce')
                ->join('ce.refFiliere', 'f', 'f.idFili = ce.idFili')
                ->where('ce.blVali = 0')
                ->andWhere('f.idFili = :idFili')
                ->setParameter('idFili', $filiere);
        

        try {
            $ce = $qb->getQuery()->getResult();
        } catch (NoResultException $e) {
            // Pas de bilan pour cette enquete et coll
            return null;
        }
        return $ce;
    }

}
