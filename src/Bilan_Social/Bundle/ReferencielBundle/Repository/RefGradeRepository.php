<?php

namespace Bilan_Social\Bundle\ReferencielBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;
use Bilan_Social\Bundle\CoreBundle\Repository\AbstractRepository;
/**
 * RefCategorieRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RefGradeRepository extends RefAbstractRepository {

    public function findByAllWithOrder() {

        $qb = $this->_em->createQueryBuilder();
        $qb->select('g')
                ->from($this->_entityName, 'g')
                ->innerJoin('g.refCadreEmploi', 'ce', 'g.idCadrempl = ce.idCadrempl')
                ->innerJoin('ce.refFiliere', 'f', 'f.idFili = ce.idFili')
                ->where('g.blCons = 1')
                ->andWhere('g.blVali = 0')
                ->andWhere('ce.blCons = 1')
                ->andWhere('f.blCons = 1')
               // ->andWhere('ce.idCadrempl = 1')
                //->andWhere('f.idFili= 1')
                ->addOrderBy('f.idFili', 'ASC')
                ->addOrderBy('ce.idCadrempl', 'ASC')
                ->addOrderBy('g.idGrad', 'ASC')
        ;

        try {
            $grade = $qb->getQuery()->getResult();
        } catch (NoResultException $e) {
            // Pas de bilan pour cette enquete et coll
            return null;
        }

        return $grade;
    }

    public function findAllGradeByCadreEmploi($cdCadrempl) {

        $qb = $this->_em->createQueryBuilder();
        $qb->select('g')
                ->from($this->_entityName, 'g')
                ->innerJoin('g.refCadreEmploi', 'ce', 'g.idCadrempl = ce.idCadrempl')
                ->where('g.blVali = 0')
                ->andWhere('ce.idCadrempl = :idCadrempl')
                ->setParameter('idCadrempl', $cdCadrempl);


        try {
            $ce = $qb->getQuery()->getResult();
        } catch (NoResultException $e) {
            // Pas de bilan pour cette enquete et coll
            return null;
        }
        return $ce;
    }

    public function findAllGradeByBlCons($blCons) {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('g')
                ->from($this->_entityName, 'g')
                ->innerJoin('g.refCadreEmploi', 'ce', 'g.idCadrempl = ce.idCadrempl')
                ->innerJoin('ce.refFiliere', 'f', 'f.idFili = ce.idFili')
                ->where('g.blCons = :blCons')
                ->andWhere('g.blVali = 0')
                ->setParameter('blCons', $blCons)
                ->addOrderBy('f.idFili', 'ASC')
                ->addOrderBy('ce.idCadrempl', 'ASC')
                ->addOrderBy('g.idGrad', 'ASC');

        try {
            $grades = $qb->getQuery()->getResult();
        } catch (NoResultException $e) {
            // Pas de bilan pour cette enquete et coll
            return null;
        }
        return $grades;
    }

    public function findOneByInCdN4ds($cdN4ds) {
        $g = null;       
        if($cdN4ds!=null){
            $code = '%-'.$cdN4ds.'-%';
            $qb = $this->_em->createQueryBuilder();
            $qb->select('g')
                    ->from($this->_entityName, 'g')
                    ->where('g.blVali = 0')
                    ->andWhere('concat(concat(\'-\', g.cdMotiN4ds), \'-\' ) LIKE :code')
                    ->setParameter('code', $code)
                    ;

            try {
                $g = $qb->getQuery()->getSingleResult();
            }
            catch (NoResultException $e) {
                return null;
            }
        }

        return $g;

    }


}
